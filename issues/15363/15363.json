{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "Rawr.Base.Optimizer",
      "DisplayName": "Rawr.Base.Optimizer"
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "After creating an Upgrade List, it'd be nice if we could filter the results, so I could for example see which ones are purchased by badges, or which of these items drop from the raid I'm about to do.",
    "LastUpdatedDate": "2017-11-27T11:01:56.107-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "Rawr",
    "ReportedDate": "2009-12-11T08:44:39.53-08:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "[Feature Request.Optimizer.UL] Filters for Build Upgrade List",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 6,
    "Id": 15363
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Random notes:  Build Upgrade List respects the ITem Filters that are set when it is run, so see if that does what you're looking for.  I do agree that an active \"filter\" box (like on the gemming templates interface), or even a sub-Filter specifically for an already-built Upgrade List would be great.",
      "PostedDate": "2009-12-18T20:56:06.683-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-05-17T08:19:04.13-07:00",
      "Id": -2147483648
    },
    {
      "Message": "There is so much that could be added here to make the upgrade list more usable.  Currently I export the list to a .csv and then import it into excel where I have written a long-ass macro to do what the OP describes.  I parse the CSV into NAME/SLOT/DUNGEON/DIFFICULTY/BOSS/iLVL/upgrade value.  This means that I have to manually manipulate the strings of the CSV file.  BUT... Im the end, i am able to sort the results so that I can see for instance: all craftable items that are upgrades, all upgrades available in ICC 10 (non heroic), etc, etc.\r\n\r\nBecause of my use of the CSV file, i can run the optimizer to build the upgrade list one time and then import that csv.  That is better than having to run the optimizer many times with different filters set.\r\n\r\nIt works for me, but it would be awesome if RAWR! could do it.  ",
      "PostedDate": "2010-05-17T08:27:25.793-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Personally it'd probably be better/easier to export to an XML, and have it refer to an xslt to display it in the browser with all the wanted bells and whistles.\r\nit's xml to easily loaded/converted in another problem.\r\nwe could provide a simple xslt with some of the bells and whistles if you want more, it can be customised by changing the xslt.\r\n\r\nAdding all the filtering in rawr itself is probably not a good idea as it would mean you need to run the optimiser and wait for it to finish each time you want to play with the data.",
      "PostedDate": "2010-05-18T07:22:38.05-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-07-02T13:56:45.423-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-07-02T14:11:48.143-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-07-02T15:29:11.29-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-07-02T15:55:41.543-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-07-09T12:32:00.773-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-07-09T12:33:45.287-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Relevant to Rawr4",
      "PostedDate": "2010-11-21T11:06:52.16-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-11-22T20:04:26.187-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2011-01-27T12:55:57.21-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2011-03-17T19:05:05.29-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2011-09-08T08:59:37.88-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2012-02-02T14:51:58.887-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:31:27.61-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2017-11-27T11:01:56.107-08:00",
      "Id": -2147483648
    }
  ]
}