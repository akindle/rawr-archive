{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "Rawr.Moonkin",
      "DisplayName": "Rawr.Moonkin"
    },
    "ClosedComment": "Old issue.",
    "ClosedDate": "2009-08-08T07:17:01.08-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Moonfire can generate a Nature's Grace, but not consume one.  The probability that MF will give you an extra NG is\n \n(1 - probability_you_already_had_NG)*(probablity_MF_will_crit)\n \nin 14.1b that is coded as\n \nstarfire.CastTime -= ((1 - (rotation.AverageCritChance + critFromGear)) * (moonfire.SpecialCriticalModifier + critFromGear) * 0.5f) / rotation.StarfireCount;\n \nWhich looks right except that I don't believe rotation.AverageCritChance is entirely correct.  AverageCritChance is the average of all your spell-specific crits.  For MF IS SF*3 (talented, no gear) it would be (10% + 0% + 3*4%)/5 = 4.4%.\n \nThe 4.4% number includes a contribution from IS.  However IS is \"transparent\" to NG.  It can't generate it and it can't consume it.  It also includes a contribution from the previous MF cast.  However PvE rotations shouldn't be spamming MF.  That means that the MF right before an SF should essentially never be immediately following another MF cast.  The \"correct\" AverageCritChance for this rotation would have been 4%.\n \nSome other calculations are using crit rates that are too high when IS is in the rotation, I believe.  For Lightning Capacitor:\n \n                float timeBetweenProcs = rotation.Duration / (hitRate * (calcs.SpellCrit + rotation.AverageCritChance) * rotation.CastCount);\n \nThis calculation (and others, I believe) assume that IS can crit.  Suppose I had a pure IS rotation.  rotation.AverageCritChance would be zero, but calcs.SpellCrit would be non-zero, meaning you'd expect procs to occur.",
    "LastUpdatedDate": "2017-11-27T11:00:08.737-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "Rawr",
    "ReportedDate": "2008-05-21T07:31:46.093-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "[Moonkin] crits",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 10218
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Well, there's that and the fact that I think the calculation is fundamentally flawed in that it will apply to multiple rotations because it modifies the Starfire object's cast time.  I'll try to get some work done on both of these issues for 14.2.",
      "PostedDate": "2008-05-21T12:09:24.783-07:00",
      "Id": -2147483648
    },
    {
      "Message": "is this fixed in 2.1.3?",
      "PostedDate": "2008-12-11T07:50:27.4-08:00",
      "Id": -2147483648
    },
    {
      "Message": "A lot of these calculations got reworked in between the beta and 2.1.  This one may or may not have been touched on.  I'll double-check it.",
      "PostedDate": "2008-12-11T09:42:41.307-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-08-08T07:17:01.08-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-09-08T15:06:13.723-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2011-05-20T23:03:27.03-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:36:50.72-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:27:16.103-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2017-11-27T11:00:08.737-08:00",
      "Id": -2147483648
    }
  ]
}