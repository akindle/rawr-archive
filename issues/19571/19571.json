{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "Rawr.Base",
      "DisplayName": "Rawr.Base"
    },
    "ClosedComment": "",
    "ClosedDate": "2011-02-07T15:04:42.963-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "see attach. \nVista 32bit russian, Microsoft Silverlight 4.0.51204.0",
    "LastUpdatedDate": "2013-05-16T05:19:12.177-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "Rawr",
    "ReportedDate": "2011-01-05T09:55:45.91-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "[Base] Incorrect Display of Russian Characters",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 19571
  },
  "FileAttachments": [
    {
      "FileId": 4357,
      "FileName": "ru_realm.png",
      "DownloadUrl": ".\\4357"
    }
  ],
  "Comments": [
    {
      "Message": "Its encoding the characters to something an english system can comprehend and what is passed by the browser. We need to find away to convert these into actual characters and back",
      "PostedDate": "2011-01-05T11:18:08.89-08:00",
      "Id": -2147483648
    },
    {
      "Message": "I thought this was pretty well documented ?\r\nRawr should use unicode only (which it does).\r\nWhen building an URL based on unicode, you need to translate special characters.  The other way around, we're reading XML which should be handled automatically when using a proper parser, if you're doing the parsing  yourself, you should use the encoding in the 1st line of the xml, and convert approproately, not assume the encodig is in a specific format (or assume there's no encoding at all).",
      "PostedDate": "2011-01-06T03:56:34.19-08:00",
      "Id": -2147483648
    },
    {
      "Message": "its seems as 2 different problem. \r\nCharacter name can be decoded by \"decodeURI\" JS function, but realm name totally seems very strange. Possible you get correct UTF 8 realm name and convert it into single byte string.\r\n",
      "PostedDate": "2011-01-06T05:52:45.853-08:00",
      "Id": -2147483648
    },
    {
      "Message": "What's in the \"name\" field is URI expanded UTF8 text.\r\n%d0%a1%d0%be... -> convert to binary string (in hex this is d0 a1 d0 be d0 b7 d0 b5 d1 80 d1 86 d0 b0 d1 8e d1 89 d0 b8 d0 b9)\r\nconvert to unicode -> \"Созерцающий\"  (assuming I haven't typed any errors, it certainly looks russian at least).\r\ntext to binary should be easy enough to figure out :p\r\nUTF8 to Unicode can be done with the Win API MultiByteToWideChar(CP_UTF8, 0, cpUtf8String, wcpUnicodeString, wUnicodeStringLenInChars); Not sure how to do it in .NET\r\n\r\nWhat's in the Realm box now appears to be a direct \"ansi\" display of an UTF8 string, so it's already decoded, but not converted to unicode.\r\nThat string would be d0 b2 d0 b5 d1 87 d0 bd d0 b0 d1 8F 20 d0 bf d0 b5 d1 81 d0 bd d1 8F \r\nConvert to unicode gives : \"вечная песня\"  which is russian for eversong.\r\n0x0081 and 0x008f aren't valid unicode pointpoints, hence why you get the boxes (took me a bit of figuring out which ones the boxes were)\r\n\r\n\r\nI'm going to assume that:\r\n* Whoever wrote the code assumed that character names in the URL's don't need decoding, since the URI encoding will store regular ASCII chars as is, and only convert special chars to %xx, for english names, you won't notice anything special. Character names also don't allow punctuation characters, so it was probably not detected during testing.\r\n* The server name was decoded because that can contain special chars (the apostrophe in \"Blade's Edge\", \"Kil'jaeden\", \"Ner'zhul\"...), but again since english \r\n* Since english has no \"special\" characters that don't fit into the lower ASCII set, it never occured to the dev that name and realm are in effect NOT ascii strings, but UTF8 strings, so no conversion from UTF8 to Unicode (although technically it's UTF16) was made.\r\n\r\nWhew.  All this from a android while on the train to from brussels to hamburg :p",
      "PostedDate": "2011-01-07T03:14:26.633-08:00",
      "Id": -2147483648
    },
    {
      "Message": "With the fix for another issue in place, Name now works correctly. Realm however still looks fubar.",
      "PostedDate": "2011-01-28T09:52:53.213-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Astry and I have fixed this locally, waiting to push the fix until after we check the similar Chinese Characters issue",
      "PostedDate": "2011-02-04T22:18:59.12-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2011-02-04T22:39:48.767-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2011-02-07T15:04:42.963-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:26:36.497-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:19:12.177-07:00",
      "Id": -2147483648
    }
  ]
}