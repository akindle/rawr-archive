{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "Rawr.DPSDK",
      "DisplayName": "Rawr.DPSDK"
    },
    "ClosedComment": "",
    "ClosedDate": "2010-01-31T09:30:55.443-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "I have an issue when I try to optimize my death knight. It takes about 5-10 minutes for the optimizer to finish its thing. If i optimize any other of my toons, it works like a champ. It will only take about 30 secs or so. The thouroghness will be set about mid ways and calculation will be set to overall. I have tried deleting Rawr, and then re installing it with the same results. I think this is an awesome program it used to work great on all toons, but lately updateing the Death Knight is a real pain.",
    "LastUpdatedDate": "2017-11-27T11:04:35.153-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "Rawr",
    "ReportedDate": "2010-01-30T05:18:57.7-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "[DPSDK] Optimizer Slow",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 16174
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "oh also the build upgrade list is just as slow",
      "PostedDate": "2010-01-30T05:20:34.14-08:00",
      "Id": -2147483648
    },
    {
      "Message": "I've found that it only happens with dps dk. My main spec is tank and there is no problem, but when I check dps it slows down in everything I do, from filtering to changing talents.",
      "PostedDate": "2010-01-30T08:47:37.41-08:00",
      "Id": -2147483648
    },
    {
      "Message": "This is a duplicate of Item # 15982 :\r\nBloodysorc wrote Jan 21 at 12:32 PM\r\nJust posting to say that this is a known issue, and it is a side affect of the model redesign that showed up in this release. I will be working on performance improvements, but primarily these will come as a tradeoff of calculation\r\naccuracy/thoroughness for speed as user options, though there are most probably many other optimizations to make in the code. ",
      "PostedDate": "2010-01-30T19:35:19.167-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-01-31T09:30:55.443-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-09-09T15:57:52.72-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2011-05-20T23:25:30.47-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:30:07.633-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:22:01.983-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2017-11-27T11:04:35.153-08:00",
      "Id": -2147483648
    }
  ]
}